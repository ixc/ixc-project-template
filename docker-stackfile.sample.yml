# Save as `docker-stackfile.{environment}.yml`. Do not commit secrets.
# Always pin images for linked services on production environments.
django:
  # autoredeploy: true
  deployment_strategy: high_availability
  environment:
    BASE_SETTINGS_MODULE: develop
    # EMAIL_HOST:
    EMAIL_HOST_PASSWORD:
    # EMAIL_HOST_USER:
    MASTER_PASSWORD:
    # MEDIA_AWS_ACCESS_KEY_ID:
    MEDIA_AWS_SECRET_ACCESS_KEY:
    # MEDIA_AWS_STORAGE_BUCKET_NAME:
    # NEW_RELIC_CONFIG_FILE:
    # PGDATABASE:
    # PGHOST:
    PGPASSWORD:
    # PGPORT:
    # PGUSER:
    SENTRY_DSN:
    # SITE_DOMAIN:
    SRC_PGDATABASE:
    # SRC_PGHOST:
    # SRC_PGPASSWORD:
    # SRC_PGPORT:
    # SRC_PGUSER:
    # WSGI_ADDRESS:
  expose:
    - "8000"
  image: interaction/{{ project_name }}:latest
  links:
    # - elasticsearch
    - postgres
    - redis
  restart: on-failure
  sequential_deployment: true  # Avoid parallel execution of `migrate` command
  volumes:
    - /opt/{{ project_name }}/var
# elasticsearch:
#   image: interaction/elasticsearch-icu:1
#   restart: on-failure
haproxy:
  # environment:
  #   HTTP_BASIC_AUTH: USERNAME:PASSWORD
  image: dockercloud/haproxy:1.2.1
  links:
    - django
  ports:
    - "80"
  roles:
    - global
  restart: on-failure
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock  # Linux
    # - $DOCKER_CERT_PATH:$DOCKER_CERT_PATH  # OS X
postgres:
  environment:
    POSTGRES_PASSWORD:
  image: postgres:9.4
  restart: on-failure
redis:
  image: redis:3
  restart: on-failure
