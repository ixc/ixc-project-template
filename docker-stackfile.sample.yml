# Update, save as `docker-stackfile.{branch}.yml` and commit.
#
# Do not commit secrets. Get from 1Password when adding stack to Docker Cloud.
#
# Non-secrets should be added to a base settings module instead of this file,
# but those listed below must be defined as environment variables.

django:
  # autoredeploy: true
  deployment_strategy: high_availability
  environment:
    - BASE_SETTINGS_MODULE=
    - EMAIL_HOST_PASSWORD=
    - EXTRA_SETTINGS=http-request add-header X-Forwarded-Proto https if { ssl_fc }
    - FORCE_SSL=yes
    # - MASTER_PASSWORD=
    - MEDIA_AWS_SECRET_ACCESS_KEY=
    - PGHOST=
    - PGPASSWORD=
    # - PGPORT=5432
    - PGUSER=
    - SECRET_KEY=
    - SENTRY_DSN=
    # - SRC_PGDATABASE=
    # - SRC_PGHOST=
    # - SRC_PGPASSWORD=
    # - SRC_PGPORT=5432
    # - SRC_PGUSER=
    - VIRTUAL_HOST=http://{{ project_name }}.{env}.ixcsandbox.com,https://{{ project_name }}.{env}.ixcsandbox.com
  expose:
    - "8000"
  image: interaction/{{ project_name }}:{branch}
  links:
    # - elasticsearch
    # - postgres
    - redis
  read_only: true
  restart: on-failure
  sequential_deployment: true
  tags:
    - {env}
  volumes:
    - /opt/{{ project_name }}/var
# elasticsearch:
#   image: interaction/elasticsearch-icu:1
#   restart: on-failure
#   tags:
#     - {env}
# haproxy:
#   environment:
#     - DEFAULT_SSL_CERT=
#     - HTTP_BASIC_AUTH={USERNAME}:{PASSWORD}
#   image: dockercloud/haproxy:1.5.1
#   links:
#     - django
#   ports:
#     - "80:80"
#     - "443:443"
#   restart: on-failure
#   roles:
#     - global
#   tags:
#     - {env}
# postgres:
#   environment:
#     POSTGRES_PASSWORD:
#   image: onjin/alpine-postgres:9.4
#   restart: on-failure
#   tags:
#     - {env}
redis:
  command: redis-server --appendonly yes
  image: redis:3-alpine
  restart: on-failure
  tags:
    - {env}
